Fundamentos Básicos II

1.
Tamaño Grande - Dado un array, escribe una función que cambie todos los números positivos en él, por el string “big”. Ejemplo: grande([-1,3,5,-5]) devuelve [-1, “big”, “big”, -5].



	function nullpositivebig(arr){
	var nuearr	=[];
    for(i=0;i<arr.length;i=i+1){
      if(arr[i]>0){
        nuearr.push('Dojo');
        }
        else{
        nuearr.push(arr[i]); 
        }
    }
    return nuearr;
	}
	console.log(nullpositivebig([-26,466,235,0,-1,5]));



2.
Imprime (print) el menor, devuelve (return) el mayor - Crea una función que tome un array de números. La función debería imprimir (print) el menor valor del array, y devolver (return) el mayor. 


	function maxmin(arr){
	var max= arr[0];
	var min= arr[0];
		for(i=0;i<=arr.length-1;i++){
			if(max<arr[i]){
				max = arr[i];
				}
			if(min>arr[i]){
				min = arr[i];
				}
		}
	console.log(min);
    /* console.log(max); */
	return max;
	}
	maxmin([45,69,36,18]);
	
	
	
3.
Imprime (print) uno, devuelve (return) otro- Crea una función para un array de números. La función debería imprimir (print) el penúltimo valor y devolver (return) el primer valor impar.


	function printunoretdos(arr){
	console.log(arr[arr.length-2]);
	for(i=0;i<arr.length;i++){
		if(arr[i]%2==1){
		return arr[i];
		}
		}
		}
	console.log(printunoretdos([72,92,73,78,36]));


4.
Doble Visión - Dado un array, crea una función que devuelva un nuevo array donde cada valor se duplique. Entonces, doble([1,2,3]) debiera devolver [2, 4, 6] sin cambiar el array original. 


	function doblede(arr){
			var nuearr	=[];
			for(i=0;i<arr.length;i++){
				nuearr.push((arr[i]*2));
			}
			return nuearr;
	}
	console.log(doblede([1,2,3]));


5.
Contar Positivos -  Dado un array de números, crea una función para reemplazar el último valor con el número de valores positivos encontrados en el array. Ejemplo, contarPositivos([-1,1,1,1]) cambia el array original y devuelve [-1,1,1,3].


	function contapos(arr){
	var con=0;
		for(i=0;i<arr.length;i++){
			if(arr[i]>0){
			con=con+1;
			}
		}
	arr[arr.length-1]=con;
	return arr;
	}

	console.log(contapos([65,-67,27,-43,33,-99,82,-11]));

6.
Pares e Impares - Crea una función que acepte un array. Cada vez que ese array tenga 3 valores impares seguidos, imprime (print) “¡Qué imparcial!”, y cada vez que tenga 3 pares seguidos, imprime (print) “¡Es para bien!”.

	function pareseimpa(arr){
		var par=0;
		var impar=0;
	
		for(i=0;i<arr.length;i++){
			if(arr[i]%2==0){
				par++;
				impar=0;
				if(par==3){
					console.log("¡Es para bien!");
					par=0;
				}
			} else if(arr[i]%2!=0){
				par=0;
				impar++;  
				if(impar==3){
					console.log("¡Qué imparcial!");
					impar=0;
				}
			}
		}
	return arr;
	}
	console.log(pareseimpa([-65,34,92,-6,-86,-71,78,55,21,-11]));

7.
Incrementa los Segundos - Dado un array de números arr, agrega 1 a cualquier otro elemento, específicamente a aquellos cuyo índice es impar (arr[1], arr[3], arr[5], etc). Luego, console.log cada valor del array y devuelve arr. 


	function incrementa(arr){
		for(i=0;i<arr.length;i++){
			if(i%2!=0){
				arr[i]++;
              console.log(arr[i]);
			}
		}
	return arr;
	}

	console.log(incrementa([-65,34,92,-6,-86,-71,78,55,21,-11]));
	


8.
Longitudes previas - Pasado un array (similar a decir ‘tomado un array’ o ‘dado un array’) que contiene strings, reemplaza cada string con un número de acuerdo cantidad de letras (longitud) del string anterior. Por ejemplo, longitudesPrevias([“programar”,“dojo”, “genial”]) debería devolver [“programar”,9, 4]. Pista: ¿For loops solo puede ir hacia adelante?



	function longprev(arr){
		for(i=arr.length-1;i>0;i--){
			arr[i]=(arr[i].length);
		}
	return arr;
	}
	console.log(longprev(["Numeros","pares","o","impares","reales","e","irracionales"]));
  
	
	
	
9.
Agrega Siete - Construye una función que acepte un array. Devuelve un nuevo array con todos los valores del original, pero sumando 7 a cada uno. No alteres el array original. Por ejemplo, agregaSiete([1,2,3) debería devolver [8,9,10] en un nuevo array. 

	
	function agregasiete(arr){
	var nuearr=[];
		for(i=0;i<arr.length;i++){
		nuearr.push(arr[i]+7);
		}
		return nuearr;
	}
console.log(agregasiete([15,64,84,27,93]));


10.
Array Inverso - Dado un array, escribe una función que invierte sus valores en el lugar. Ejemplo: invertir([3,1,6,4,2)) devuelve el mismo array pero con sus valores al revés, es decir [2,4,6,1,3]. Haz esto sin crear un array temporal vacío. (Pista: necesitarás intercambiar (swap) valores).


	function invertir(arr){
  
  var n = arr.length-1;
    
  for (i=0;i<=n/2;i++){
			var temp=arr[i];
         var e=n-i;
     		arr[i]=arr[e];
			arr[e]=temp;
		}
		return arr;
	}
	console.log(invertir([15,64,84,27,93]));
	
11.
Perspectiva: Negativa - Dado un array crear y devuelve uno nuevo que contenga todos los valores del array original, pero negativos (no simplemente multiplicando por -1). Dado [1,-3,5], devuelve [-1,-3,-5].


	function negatizar(arr){
		
      var nuearr=[];
		
      for(i=0;i<arr.length;i++){
			
        if(arr[i]>0){
          nuearr.push(-(arr[i]));
		}
          else{
          nuearr.push(arr[i]);
          }
      }
      return nuearr;
    }

	console.log(negatizar([-65,34,92,-6,-86,-71,78,55,21,-11]));



12.
Siempre hambriento - Crea una función que acepte un array e imprima (print) “yummy” cada vez que alguno de los valores sea “comida”. Si ningún valor es “comida”, entonces imprime “tengo hambre” una vez. 


	function mensajito(arr) {
		var bool = false;
		var nuear = [];

		for (var i = 0; i < arr.length; i++) {
			nuear.push(arr[i]);
			if (arr[i] == "comida") {
				nuear.push("yummy");
				bool = true;
			}
		}

		if (bool === false) {
		nuear.push("tengo hambre");
		}
		return nuear;
	}

	console.log(mensajito(["el","desayuno","es","la","primera","comida","del","día"]));
	console.log(mensajito(["solo","un","café","no","cuenta","como","desayunar"]));
	



13.
Cambiar hacia el centro -  Dado un array, cambia el primer y último valor, el tercero con el ante penútimo, etc. Ejemplo: cambiaHaciaElCentro([true, 42, “Ada”, 2, “pizza”]) cambia el array a [“pizza¨, 42, “Ada”, true]. cambiaHaciaElCentro([1,2,3,4,5,6]) cambia el array a [6,2,4,3,5,1]. No es necesario devolver (return) el array esta vez.


	function cambios(arr){
		var e=arr.length-1;
		var temp=arr[e];
		arr[e]=arr[0];
		arr[0]=temp;
		var temp=arr[2];
		arr[2]=arr[e-2];
		arr[e-2]=temp;
		return arr;
	}
	console.log(cambios([1,29,72,76,48,77,99,42]));


14. 
Escala el Array - Dado un array arr y un número num, multiplica todos los valores en el array arr por el número num, y devuelve el array arr modificado. Por ejemplo, escalaArray([1,2,3], 3] debería devolver [3,6,9].

	function escalar(arr){
		var e=arr.length;
		for(var i=0;i<e;i++){
			arr[i]*=e;
		}
		return arr;
	} 

	console.log(escalar([3,7,2,11,5,20]));




